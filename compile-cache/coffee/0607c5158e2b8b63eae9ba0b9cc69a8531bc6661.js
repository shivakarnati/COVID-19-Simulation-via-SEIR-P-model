(function() {
  module.exports = {
    deactivate: function() {
      var ref;
      return (ref = this.toolBar) != null ? ref.removeItems() : void 0;
    },
    consumeToolBar: function(toolBar) {
      var btn;
      this.toolBar = toolBar('handy-tool-bar');
      this.toolBar.addSpacer();
      this.toolBar.addButton({
        callback: 'application:open-file',
        icon: 'file-text',
        iconset: 'icomoon',
        tooltip: 'Open File'
      });
      this.toolBar.addButton({
        'callback': 'application:open-folder',
        'icon': 'folder-open',
        'iconset': 'icomoon',
        'tooltip': 'Open Folder'
      });
      if (atom.packages.loadedPackages['project-manager']) {
        this.toolBar.addButton({
          'icon': 'file-submodule',
          'tooltip': 'List projects',
          'callback': 'project-manager:list-projects'
        });
      }
      this.toolBar.addSpacer();
      this.toolBar.addButton({
        'callback': 'pane:split-right',
        'icon': 'columns',
        'iconset': 'fa',
        'tooltip': 'Split Right'
      });
      btn = this.toolBar.addButton({
        'callback': 'pane:split-down',
        'icon': 'columns',
        'iconset': 'fa',
        'tooltip': 'Split Down'
      });
      btn.element.classList.add('fa-rotate-270');
      this.toolBar.addSpacer();
      this.toolBar.addButton({
        'callback': 'window:toggle-full-screen',
        'icon': 'screen-full',
        'tooltip': 'Toggle Fullscreen'
      });
      this.toolBar.addButton({
        'callback': 'tree-view:toggle',
        'icon': 'move-down',
        'iconset': 'icomoon',
        'tooltip': 'Toggle Sidebar'
      });
      if (atom.packages.loadedPackages['minimap']) {
        this.toolBar.addButton({
          'callback': 'minimap:toggle',
          'icon': 'map-marker-alt',
          'iconset': 'fa',
          'tooltip': 'Toggle Minimap'
        });
      }
      if (atom.packages.loadedPackages['expose']) {
        this.toolBar.addButton({
          'callback': 'expose:toggle',
          'icon': 'window-restore',
          'iconset': 'fa',
          'tooltip': 'Toggle Expos√©'
        });
      }
      this.toolBar.addSpacer();
      this.toolBar.addButton({
        'callback': 'editor:auto-indent',
        'icon': 'indent',
        'iconset': 'fa',
        'tooltip': 'Auto indent (selection)'
      });
      this.toolBar.addButton({
        'callback': 'editor:unfold-all',
        'icon': 'level-down-alt',
        'iconset': 'fa',
        'tooltip': 'Unfold all blocks'
      });
      if (atom.packages.loadedPackages['atom-beautify']) {
        this.toolBar.addButton({
          'callback': 'atom-beautify:beautify-editor',
          'icon': 'star',
          'iconset': 'fa',
          'tooltip': 'Beautify code'
        });
      }
      if (atom.packages.loadedPackages['terminal-plus']) {
        this.toolBar.addSpacer();
        this.toolBar.addButton({
          'callback': 'terminal-plus:toggle',
          'icon': 'terminal',
          'tooltip': 'Toggle Terminal-plus'
        });
      }
      if (atom.inDevMode()) {
        this.toolBar.addButton({
          'callback': 'window:reload',
          'icon': 'redo',
          'iconset': 'fa',
          'tooltip': 'Reload Window'
        });
        this.toolBar.addButton({
          'callback': 'window:toggle-dev-tools',
          'icon': 'tools',
          'tooltip': 'Toggle Developer Tools'
        });
      }
      if (atom.packages.loadedPackages['git-plus']) {
        this.toolBar.addSpacer();
        this.toolBar.addButton({
          'callback': 'git-plus:menu',
          'icon': 'git-plain',
          'iconset': 'devicon',
          'tooltip': 'Git plus'
        });
      }
      if (atom.packages.loadedPackages['script']) {
        this.toolBar.addSpacer();
        this.toolBar.addButton({
          'callback': 'script:run',
          'icon': 'play',
          'iconset': 'fa',
          'tooltip': 'Run script'
        });
        this.toolBar.addButton({
          'callback': 'script:kill-process',
          'icon': 'stop',
          'iconset': 'fa',
          'tooltip': 'Stop script'
        });
        this.toolBar.addButton({
          'callback': 'script:run-options',
          'icon': 'cogs',
          'iconset': 'fa',
          'tooltip': 'Configure script'
        });
      }
      this.toolBar.addSpacer();
      if (atom.packages.loadedPackages['markdown-preview-plus']) {
        this.toolBar.addButton({
          'callback': 'markdown-preview-plus:toggle',
          'icon': 'markdown',
          'tooltip': 'Markdown Preview'
        });
      } else {
        this.toolBar.addButton({
          'callback': 'markdown-preview:toggle',
          'icon': 'markdown',
          'tooltip': 'Markdown Preview'
        });
      }
      if (atom.packages.loadedPackages['atom-html-preview']) {
        this.toolBar.addButton({
          'callback': 'atom-html-preview:toggle',
          'icon': 'logo-html5',
          'iconset': 'ion',
          'tooltip': 'HTML Preview'
        });
      }
      if (atom.packages.loadedPackages['atom-live-server']) {
        this.toolBar.addButton({
          'callback': 'atom-live-server:start-3000',
          'icon': 'sync',
          'tooltip': 'HTML Live Server'
        });
      }
      this.toolBar.addSpacer();
      return this.toolBar.addButton({
        'callback': 'command-palette:toggle',
        'icon': 'palette',
        'iconset': 'fa',
        'tooltip': 'Toggle Command Palette'
      });
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,
